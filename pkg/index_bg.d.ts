/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_connection_free(a: number): void;
export function connection_connect(a: number): number;
export function connection_send_num(a: number, b: number): void;
export function connection_send(a: number, b: number, c: number): void;
export function connection_recv(a: number, b: number): void;
export function connection_recv_fut(a: number): number;
export function __wbg_recvfuture_free(a: number): void;
export function recvfuture_await(a: number): number;
export function main(): void;
export function __wbg_state_free(a: number): void;
export function state_new(a: number): number;
export function state_with_physics_raw(a: number, b: number, c: number): number;
export function state_step(a: number): void;
export function state_input_state_changed(a: number, b: number): void;
export function state_to_json(a: number): number;
export function state_latency_secs(a: number): number;
export function connection_send_str(a: number, b: number, c: number): void;
export function __wbg_inputstate_free(a: number): void;
export function __wbg_get_inputstate_mouse_x(a: number): number;
export function __wbg_set_inputstate_mouse_x(a: number, b: number): void;
export function __wbg_get_inputstate_mouse_y(a: number): number;
export function __wbg_set_inputstate_mouse_y(a: number, b: number): void;
export function __wbg_get_inputstate_mouse_down(a: number): number;
export function __wbg_set_inputstate_mouse_down(a: number, b: number): void;
export function inputstate_new(a: number, b: number, c: number): number;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h5c980ef67dcc2d9d(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hfcd0da4d5b74a838(a: number, b: number, c: number): void;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h36712187a371be70(a: number, b: number, c: number, d: number): void;
export function __wbindgen_start(): void;
